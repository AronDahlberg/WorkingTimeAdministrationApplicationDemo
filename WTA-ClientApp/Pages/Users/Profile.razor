@page "/users/profile/{UserId}"
@using WTA_ClientApp.Common
@using WTA_ClientApp.Services
@using WTA_ClientApp.Services.Base
@inject IUserService UserService
<h3>User Profile</h3>

@if (_isLoading)
{
    <p><em>Loading profile…</em></p>
}
else if (_result is null)
{
    <div class="alert alert-warning">
        Unexpected error: no data returned.
    </div>
}
else if (!_result.IsSuccess)
{
    <div class="alert alert-danger">
        @(_result.ErrorMessage ?? "An unknown error occurred.")
    </div>
}
else
{
    <div class="card">
        <div class="card-body ps-4">
            <h5 class="card-title mb-3 fw-bold">@_result.Data!.FirstName @_result.Data.LastName</h5>
            <dl class="row">
                <dt class="col-sm-3">Email</dt>
                <dd class="col-sm-9">@_result.Data.Email</dd>
                <dt class="col-sm-3">Phone</dt>
                <dd class="col-sm-9">@_result.Data.PhoneNumber</dd>
                <dt class="col-sm-3">Emergency Contact Phone</dt>
                <dd class="col-sm-9">@_result.Data.EmergencyContactNumber</dd>
                <dt class="col-sm-3">Hourly Wage</dt>
                <dd class="col-sm-9">@_result.Data.HourlyWage kr/t</dd>
                <dt class="col-sm-3">SSN</dt>
                <dd class="col-sm-9">@_result.Data.SocialSecurityNumber</dd>
                <dt class="col-sm-3">Country</dt>
                <dd class="col-sm-9">@_result.Data.Country</dd>
                <dt class="col-sm-3">City</dt>
                <dd class="col-sm-9">@_result.Data.City</dd>
                <dt class="col-sm-3">Address</dt>
                <dd class="col-sm-9">@_result.Data.Address</dd>
                <dt class="col-sm-3">Postal Code</dt>
                <dd class="col-sm-9">@_result.Data.PostalCode</dd>
            </dl>
        </div>
    </div>
}

@code {
    [Parameter]
    public string UserId { get; set; } = default!;

    private ServiceResult<UserDto>? _result;
    private bool _isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _result = await UserService.GetUserByIdAsync(UserId);
        }
        finally
        {
            _isLoading = false;
        }
    }
}
